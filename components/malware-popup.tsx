"use client"

import { useEffect, useRef, useState } from "react"
import { AlertTriangle } from 'lucide-react'
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog"

export default function MalwarePopup({
  open,
  onOpenChange,
  notifyHandle = "teluguscripter",
}: {
  open: boolean
  onOpenChange: (v: boolean) => void
  notifyHandle?: string
}) {
  const [progress, setProgress] = useState(0)
  const [done, setDone] = useState(false)
  const timerRef = useRef<number | null>(null)

  useEffect(() => {
    if (!open) return
    setProgress(0)
    setDone(false)
    // Simulated progress
    function tick() {
      setProgress((p) => {
        const inc = Math.min(100 - p, Math.max(1, Math.round(Math.random() * 6)))
        const next = p + inc
        if (next >= 100) {
          setDone(true)
          if (timerRef.current) window.clearInterval(timerRef.current)
        }
        return next
      })
    }
    timerRef.current = window.setInterval(tick, 140)
    return () => {
      if (timerRef.current) window.clearInterval(timerRef.current)
    }
  }, [open])

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="border-red-900/50 bg-black/90 text-red-200 sm:max-w-md">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2 text-red-300">
            <AlertTriangle className="h-5 w-5" aria-hidden />
            Malware Injection
          </DialogTitle>
          <DialogDescription className="text-red-400/80">
            Simulation in progress. This is a visual effect only.
          </DialogDescription>
        </DialogHeader>

        <div className="mt-2 space-y-3">
          <ProgressBar value={progress} />
          <div className="flex items-center justify-between text-xs">
            <span className="text-red-300">Injecting payload...</span>
            <span className="tabular-nums text-red-400">{progress}%</span>
          </div>

          {done ? (
            <div className="mt-2 rounded border border-red-900/50 bg-black/60 p-2 text-xs text-red-300">
              Status: Completed. Notification sent to{" "}
              <span className="font-semibold text-red-400">@{notifyHandle}</span>.
            </div>
          ) : (
            <div className="mt-2 text-xs text-red-400/80">Please wait...</div>
          )}
        </div>

        <div className="mt-2 text-[10px] text-red-500/70">
          Disclaimer: No real malware actions are performed. This is a UI simulation for stylistic purposes.
        </div>
      </DialogContent>
    </Dialog>
  )
}

function ProgressBar({ value }: { value: number }) {
  return (
    <div className="relative h-2 w-full overflow-hidden rounded bg-red-950/50">
      <div
        className="h-full bg-red-500 transition-[width] duration-150 ease-out"
        style={{ width: `${Math.max(0, Math.min(100, value))}%` }}
      />
      <div className="absolute inset-0 animate-pulse bg-gradient-to-r from-transparent via-red-400/10 to-transparent" />
    </div>
  )
}
